|CO
OVF <= LPM_ADD_SUB:insta.overflow
SEL => LPM_ADD_SUB:insta.add_sub
Cin => LPM_ADD_SUB:insta.cin
X[0] => LPM_ADD_SUB:insta.dataa[0]
X[0] => LPM_OR:inst4.data[0][0]
X[0] => LPM_AND:inst3.data[0][0]
X[1] => LPM_ADD_SUB:insta.dataa[1]
X[1] => LPM_OR:inst4.data[0][1]
X[1] => LPM_AND:inst3.data[0][1]
X[2] => LPM_ADD_SUB:insta.dataa[2]
X[2] => LPM_OR:inst4.data[0][2]
X[2] => LPM_AND:inst3.data[0][2]
X[3] => LPM_ADD_SUB:insta.dataa[3]
X[3] => LPM_OR:inst4.data[0][3]
X[3] => LPM_AND:inst3.data[0][3]
Y[0] => LPM_ADD_SUB:insta.datab[0]
Y[0] => LPM_OR:inst4.data[1][0]
Y[0] => LPM_AND:inst3.data[1][0]
Y[1] => LPM_ADD_SUB:insta.datab[1]
Y[1] => LPM_OR:inst4.data[1][1]
Y[1] => LPM_AND:inst3.data[1][1]
Y[2] => LPM_ADD_SUB:insta.datab[2]
Y[2] => LPM_OR:inst4.data[1][2]
Y[2] => LPM_AND:inst3.data[1][2]
Y[3] => LPM_ADD_SUB:insta.datab[3]
Y[3] => LPM_OR:inst4.data[1][3]
Y[3] => LPM_AND:inst3.data[1][3]
Cout <= LPM_ADD_SUB:insta.cout
out[0] <= LPM_MUX:inst.result[0]
out[1] <= LPM_MUX:inst.result[1]
out[2] <= LPM_MUX:inst.result[2]
out[3] <= LPM_MUX:inst.result[3]
SEL1 => LPM_MUX:inst2.sel[0]
SEL2 => LPM_MUX:inst.sel[0]


|CO|LPM_ADD_SUB:insta
dataa[0] => add_sub_fpl:auto_generated.dataa[0]
dataa[1] => add_sub_fpl:auto_generated.dataa[1]
dataa[2] => add_sub_fpl:auto_generated.dataa[2]
dataa[3] => add_sub_fpl:auto_generated.dataa[3]
datab[0] => add_sub_fpl:auto_generated.datab[0]
datab[1] => add_sub_fpl:auto_generated.datab[1]
datab[2] => add_sub_fpl:auto_generated.datab[2]
datab[3] => add_sub_fpl:auto_generated.datab[3]
cin => add_sub_fpl:auto_generated.cin
add_sub => add_sub_fpl:auto_generated.add_sub
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= add_sub_fpl:auto_generated.result[0]
result[1] <= add_sub_fpl:auto_generated.result[1]
result[2] <= add_sub_fpl:auto_generated.result[2]
result[3] <= add_sub_fpl:auto_generated.result[3]
cout <= add_sub_fpl:auto_generated.cout
overflow <= add_sub_fpl:auto_generated.overflow


|CO|LPM_ADD_SUB:insta|add_sub_fpl:auto_generated
add_sub => overflow_wire[0].IN0
add_sub => add_sub_cella[3].DATAC
add_sub => add_sub_cella[2].DATAC
add_sub => add_sub_cella[1].DATAC
add_sub => add_sub_cella[0].DATAC
cin => add_sub_cella[0].CIN
cout <= add_sub_cella[3].COUT
dataa[0] => add_sub_cella[0].DATAD
dataa[1] => add_sub_cella[1].DATAD
dataa[2] => add_sub_cella[2].DATAD
dataa[3] => add_sub_cella[3].DATAD
datab[0] => add_sub_cella[0].DATAF
datab[1] => add_sub_cella[1].DATAF
datab[2] => add_sub_cella[2].DATAF
datab[3] => add_sub_cella[3].DATAF
overflow <= overflow_wire[0].DB_MAX_OUTPUT_PORT_TYPE
result[0] <= add_sub_cella[0].SUM_OUT
result[1] <= add_sub_cella[1].SUM_OUT
result[2] <= add_sub_cella[2].SUM_OUT
result[3] <= add_sub_cella[3].SUM_OUT


|CO|LPM_MUX:inst
data[0][0] => mux_70e:auto_generated.data[0]
data[0][1] => mux_70e:auto_generated.data[1]
data[0][2] => mux_70e:auto_generated.data[2]
data[0][3] => mux_70e:auto_generated.data[3]
data[1][0] => mux_70e:auto_generated.data[4]
data[1][1] => mux_70e:auto_generated.data[5]
data[1][2] => mux_70e:auto_generated.data[6]
data[1][3] => mux_70e:auto_generated.data[7]
sel[0] => mux_70e:auto_generated.sel[0]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_70e:auto_generated.result[0]
result[1] <= mux_70e:auto_generated.result[1]
result[2] <= mux_70e:auto_generated.result[2]
result[3] <= mux_70e:auto_generated.result[3]


|CO|LPM_MUX:inst|mux_70e:auto_generated
data[0] => l1_w0_n0_mux_dataout.IN1
data[1] => l1_w1_n0_mux_dataout.IN1
data[2] => l1_w2_n0_mux_dataout.IN1
data[3] => l1_w3_n0_mux_dataout.IN1
data[4] => l1_w0_n0_mux_dataout.IN1
data[5] => l1_w1_n0_mux_dataout.IN1
data[6] => l1_w2_n0_mux_dataout.IN1
data[7] => l1_w3_n0_mux_dataout.IN1
result[0] <= l1_w0_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= l1_w1_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= l1_w2_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= l1_w3_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => l1_w0_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w1_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w2_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w3_n0_mux_dataout.IN0
sel[0] => _.IN0


|CO|LPM_MUX:inst2
data[0][0] => mux_70e:auto_generated.data[0]
data[0][1] => mux_70e:auto_generated.data[1]
data[0][2] => mux_70e:auto_generated.data[2]
data[0][3] => mux_70e:auto_generated.data[3]
data[1][0] => mux_70e:auto_generated.data[4]
data[1][1] => mux_70e:auto_generated.data[5]
data[1][2] => mux_70e:auto_generated.data[6]
data[1][3] => mux_70e:auto_generated.data[7]
sel[0] => mux_70e:auto_generated.sel[0]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_70e:auto_generated.result[0]
result[1] <= mux_70e:auto_generated.result[1]
result[2] <= mux_70e:auto_generated.result[2]
result[3] <= mux_70e:auto_generated.result[3]


|CO|LPM_MUX:inst2|mux_70e:auto_generated
data[0] => l1_w0_n0_mux_dataout.IN1
data[1] => l1_w1_n0_mux_dataout.IN1
data[2] => l1_w2_n0_mux_dataout.IN1
data[3] => l1_w3_n0_mux_dataout.IN1
data[4] => l1_w0_n0_mux_dataout.IN1
data[5] => l1_w1_n0_mux_dataout.IN1
data[6] => l1_w2_n0_mux_dataout.IN1
data[7] => l1_w3_n0_mux_dataout.IN1
result[0] <= l1_w0_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= l1_w1_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= l1_w2_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= l1_w3_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => l1_w0_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w1_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w2_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w3_n0_mux_dataout.IN0
sel[0] => _.IN0


|CO|LPM_OR:inst4
data[0][0] => or_node[0][1].IN1
data[0][1] => or_node[1][1].IN1
data[0][2] => or_node[2][1].IN1
data[0][3] => or_node[3][1].IN1
data[1][0] => or_node[0][1].IN0
data[1][1] => or_node[1][1].IN0
data[1][2] => or_node[2][1].IN0
data[1][3] => or_node[3][1].IN0
result[0] <= or_node[0][1].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= or_node[1][1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= or_node[2][1].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= or_node[3][1].DB_MAX_OUTPUT_PORT_TYPE


|CO|LPM_AND:inst3
data[0][0] => and_node[0][1].IN1
data[0][1] => and_node[1][1].IN1
data[0][2] => and_node[2][1].IN1
data[0][3] => and_node[3][1].IN1
data[1][0] => and_node[0][1].IN0
data[1][1] => and_node[1][1].IN0
data[1][2] => and_node[2][1].IN0
data[1][3] => and_node[3][1].IN0
result[0] <= and_node[0][1].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and_node[1][1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and_node[2][1].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and_node[3][1].DB_MAX_OUTPUT_PORT_TYPE


